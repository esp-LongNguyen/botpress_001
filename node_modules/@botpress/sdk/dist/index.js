"use strict";var me=Object.create;var E=Object.defineProperty;var ye=Object.getOwnPropertyDescriptor;var he=Object.getOwnPropertyNames;var be=Object.getPrototypeOf,xe=Object.prototype.hasOwnProperty;var F=(e,t)=>{for(var n in t)E(e,n,{get:t[n],enumerable:!0})},W=(e,t,n,i)=>{if(t&&typeof t=="object"||typeof t=="function")for(let o of he(t))!xe.call(e,o)&&o!==n&&E(e,o,{get:()=>t[o],enumerable:!(i=ye(t,o))||i.enumerable});return e};var R=(e,t,n)=>(n=e!=null?me(be(e)):{},W(t||!e||!e.__esModule?E(n,"default",{value:e,enumerable:!0}):n,e)),ve=e=>W(E({},"__esModule",{value:!0}),e);var gt={};F(gt,{Bot:()=>A,Integration:()=>z,IntegrationDefinition:()=>M,botIdHeader:()=>d,botUserIdHeader:()=>I,clients:()=>ct,configurationHeader:()=>l,integrationIdHeader:()=>P,messages:()=>K,operationHeader:()=>u,serve:()=>h,typeHeader:()=>B,webhookIdHeader:()=>w});module.exports=ve(gt);var G=R(require("axios"));var d="x-bot-id",I="x-bot-user-id",P="x-integration-id",w="x-webhook-id",l="x-bp-configuration",u="x-bp-operation",B="x-bp-type";var H=class{axios;constructor(t){this.axios=t??G.default.create({timeout:5e3})}register=t=>J("register",t,this.axios);unregister=t=>J("unregister",t,this.axios);eventReceived=t=>J("event_received",t,this.axios)};function Ce(e){return{[B]:e.type,[d]:e.botId,[u]:e.operation,[l]:Buffer.from(typeof e.configuration=="string"?e.configuration:JSON.stringify(e.configuration),"utf-8").toString("base64")}}async function J(e,{url:t,data:n,...i},o){return(await o.post(t,n,{headers:Ce({...i,operation:e})})).data}var Q=require("node:http");var y=console;async function h(e,t=8072,n=Be){let i=(0,Q.createServer)(async(o,r)=>{try{let s=await Ie(o),c=await e(s);r.writeHead(c?.status??200,c?.headers??{}).end(c?.body??"{}")}catch(s){y.error("Error while handling request",{error:s?.message??"Internal error occured"}),r.writeHead(500).end(JSON.stringify({error:s?.message??"Internal error occured"}))}});return i.listen(t,()=>n(t)),i}async function Ie(e){let t=await we(e),n={};for(let o=0;o<e.rawHeaders.length;o+=2){let r=e.rawHeaders[o].toLowerCase(),s=e.rawHeaders[o+1];n[r]=s}let i=new URL(e.url??"",e.headers.host?`http://${e.headers.host}`:"http://botpress.cloud");return{body:t,path:i.pathname,query:Pe(i.search,"?"),headers:n,method:e.method?.toUpperCase()??"GET"}}function Pe(e,t){return e.indexOf(t)===0?e.slice(t.length):e}async function we(e){return new Promise((t,n)=>{if(e.method!=="POST"&&e.method!=="PUT"&&e.method!=="PATCH")return t(void 0);let i="";e.on("data",o=>i+=o.toString()),e.on("error",o=>n(o)),e.on("end",()=>t(i))})}function Be(e){y.info(`Listening on port ${e}`)}var N=require("@botpress/client");var X=require("zod"),Y=X.z.enum(["event_received","register","unregister","ping"]);var ee=e=>async t=>{let n=Se(t.headers);n.operation!=="ping"&&y.info(`Received ${n.operation} operation for bot ${n.botId} of type ${n.type}`);let i=new N.Client({botId:n.botId}),o={req:t,botState:e,ctx:n,client:i};switch(n.operation){case"event_received":await De(o);break;case"register":await Oe(o);break;case"unregister":await Ee(o);break;case"ping":await Te(o);break;default:throw new Error(`Unknown operation ${n.operation}`)}return{status:200}};function Se(e){let t=e[d],n=e[l],i=e[B],o=Y.parse(e[u]);if(!t)throw new Error("Missing bot headers");if(!i)throw new Error("Missing type headers");if(!n)throw new Error("Missing configuration headers");if(!o)throw new Error("Missing operation headers");return{botId:t,operation:o,type:i,configuration:n?JSON.parse(Buffer.from(n,"base64").toString("utf-8")):{}}}async function De({botState:e,ctx:t,req:n}){y.debug(`Received event ${t.type}`);let i=new N.Client({botId:t.botId}),o=Re(n);switch(t.type){case"message_created":await Promise.all(e.messageHandlers.map(r=>r({client:i,user:o.event.payload.user,conversation:o.event.payload.conversation,message:o.event.payload.message,event:o.event,ctx:t})));break;case"state_expired":await Promise.all(e.stateExpiredHandlers.map(r=>r({client:i,state:o.event.payload.state,ctx:t})));break;default:await Promise.all(e.eventHandlers.map(r=>r({client:i,event:o.event,ctx:t})))}}async function Te(e){}async function Oe(e){}async function Ee(e){}function Re(e){if(!e.body)throw new Error("Missing body");return JSON.parse(e.body)}var A=class{_state={registerHandlers:[],unregisterHandlers:[],messageHandlers:[],eventHandlers:[],stateExpiredHandlers:[]};definition;constructor(t={}){this.definition=t}message=t=>{this._state.messageHandlers.push(t)};event=t=>{this._state.eventHandlers.push(t)};stateExpired=t=>{this._state.stateExpiredHandlers.push(t)};handler=ee(this._state);start=t=>h(this.handler,t)};var L=require("@botpress/client"),U=R(require("axios"));var ne=require("@botpress/client"),S=require("zod"),te=new ne.RuntimeError(""),oe=S.z.object({code:S.z.literal(te.code),type:S.z.literal(te.type),message:S.z.string()});var k=class{axios;constructor(t){this.axios=t??U.default.create({timeout:5e3})}actionTriggered=t=>b("action_triggered",t,this.axios);messageCreated=t=>b("message_created",t,this.axios);register=t=>b("register",t,this.axios);unregister=t=>b("unregister",t,this.axios);webhookReceived=t=>He("webhook_received",t,this.axios);createUser=t=>b("create_user",t,this.axios);createConversation=t=>b("create_conversation",t,this.axios)};function re(e){return{[d]:e.botId,[u]:e.operation,[I]:e.botUserId,[P]:e.integrationId,[w]:e.webhookId,[l]:Buffer.from(typeof e.configuration=="string"?e.configuration:JSON.stringify(e.configuration),"utf-8").toString("base64")}}async function He(e,{url:t,data:n,...i},o){return await o.post(t,n,{headers:re({...i,operation:e})}).catch(s=>{if(U.default.isAxiosError(s)&&s.response?.status&&s.response.status<500)return s.response;throw s})}async function b(e,{url:t,data:n,...i},o){try{return await o.post(t,n,{headers:re({...i,operation:e})})}catch(r){let s=new L.RuntimeError("").code;if(U.default.isAxiosError(r)&&r.response?.status===s){let c=oe.safeParse(r.response.data);if(c.success)throw new L.RuntimeError(c.data.message)}throw r}}var ie=require("zod"),ae=ie.z.enum(["webhook_received","message_created","action_triggered","register","unregister","ping","create_user","create_conversation"]);var x=require("radash"),a=require("zod");var se=R(require("zod-to-json-schema")),Ae=e=>e?.type==="object";function f(e){let t=(0,se.default)(e.schema,{errorMessages:!0});if(!Ae(t)||!e.ui)return t;for(let[n,i]of Object.entries(e.ui??{})){let o=t.properties?.[n];o&&(i?.title&&(o.title=i.title),i?.examples&&(o.examples=i.examples))}return t}var ke=e=>{let t=a.z.record(e);return{min:n=>t.refine(i=>Object.keys(i).length>=n,{message:`At least ${n} item(s) must be defined`})}},v=a.z.object({}).passthrough(),Ue=a.z.object({schema:v}),Me=a.z.object({title:a.z.string().optional(),description:a.z.string().optional(),schema:v}),je=a.z.object({title:a.z.string().optional(),description:a.z.string().optional(),input:a.z.object({schema:v}),output:a.z.object({schema:v})}),_e=a.z.object({schema:v}),$=a.z.object({title:a.z.string().optional(),description:a.z.string().optional()}),ze=a.z.object({title:a.z.string().optional(),description:a.z.string().optional(),messages:ke(_e).min(1),message:a.z.object({tags:a.z.record($)}).partial().optional(),conversation:a.z.object({tags:a.z.record($),creation:a.z.object({enabled:a.z.boolean(),requiredTags:a.z.array(a.z.string())})}).partial().optional()}),qe=a.z.object({type:a.z.union([a.z.literal("integration"),a.z.literal("conversation"),a.z.literal("user")]),schema:v}),Je="0.2.0",Ne="0.0.1",Le=a.z.object({name:a.z.string(),version:a.z.enum([Ne,Je]),title:a.z.string().optional(),description:a.z.string().optional(),icon:a.z.string().optional(),readme:a.z.string().optional(),configuration:Ue.optional(),events:a.z.record(Me).optional(),actions:a.z.record(je).optional(),channels:a.z.record(ze).optional(),states:a.z.record(qe).optional(),user:a.z.object({tags:a.z.record($),creation:a.z.object({enabled:a.z.boolean(),requiredTags:a.z.array(a.z.string())})}).partial().optional(),secrets:a.z.array(a.z.string()).optional()});function $e(e){return{...e,configuration:e.configuration?{...e.configuration,schema:f(e.configuration)}:void 0,events:e.events?(0,x.mapValues)(e.events,t=>({...t,schema:f(t)})):void 0,actions:e.actions?(0,x.mapValues)(e.actions,t=>({...t,input:{...t.input,schema:f(t.input)},output:{...t.output,schema:f(t.output)}})):void 0,channels:e.channels?(0,x.mapValues)(e.channels,t=>({...t,messages:(0,x.mapValues)(t.messages,n=>({...n,schema:f(n)}))})):void 0,states:e.states?(0,x.mapValues)(e.states,t=>({...t,schema:f(t)})):void 0,user:e.user}}var M=class{name;version;icon;readme;title;description;configuration;events;actions;channels;states;user;secrets;constructor(t){let n=$e(t),i=Le.parse(n),{name:o,version:r,icon:s,readme:c,title:C,description:D,configuration:T,events:O,actions:V,channels:q,states:le,user:ue,secrets:fe}=i;this.name=o,this.version=r,this.icon=s,this.readme=c,this.title=C,this.description=D,this.configuration=T,this.events=O,this.actions=V,this.channels=q,this.states=le,this.user=ue,this.secrets=fe}};var _=require("@botpress/client");var Z=R(require("util")),j=e=>{if(process.env.BP_LOG_FORMAT==="json")return JSON.stringify({msg:Z.default.format(...e),visible_to_bot_owner:!0});{let[t,...n]=e;return Z.default.format(`[For Bot Owner] ${t}`,...n)}},pe={forBot:()=>({info:(...e)=>{console.info(j(e))},warn:(...e)=>{console.warn(j(e))},error:(...e)=>{console.error(j(e))},debug:(...e)=>{console.debug(j(e))}})};var ce=e=>async t=>{let n=Ze(t.headers),i=new _.Client({botId:n.botId,integrationId:n.integrationId}),o={integration:e,ctx:n,req:t,client:i,logger:pe};try{let r;switch(n.operation){case"webhook_received":r=await Ve(o);break;case"register":r=await Fe(o);break;case"unregister":r=await We(o);break;case"message_created":r=await Xe(o);break;case"action_triggered":r=await Ye(o);break;case"ping":r=await Ke(o);break;case"create_user":r=await Ge(o);break;case"create_conversation":r=await Qe(o);break;default:throw new Error(`Unknown operation ${n.operation}`)}return r?{...r,status:r.status??200}:{status:200}}catch(r){if(r instanceof _.RuntimeError)return{status:r.code,body:JSON.stringify(r.toJSON())};throw r}};function Ze(e){let t=e[d],n=e[I],i=e[P],o=e[w],r=e[l],s=ae.parse(e[u]);if(!t)throw new Error("Missing bot headers");if(!n)throw new Error("Missing bot user headers");if(!i)throw new Error("Missing integration headers");if(!o)throw new Error("Missing webhook headers");if(!r)throw new Error("Missing configuration headers");if(!s)throw new Error("Missing operation headers");return{botId:t,botUserId:n,integrationId:i,webhookId:o,operation:s,configuration:r?JSON.parse(Buffer.from(r,"base64").toString("utf-8")):{}}}function m(e){if(!e.body)throw new Error("Missing body");return JSON.parse(e.body)}async function Ke(e){}async function Ve({client:e,ctx:t,integration:n,req:i,logger:o}){let{req:r}=m(i);return n.handler({client:e,ctx:t,req:r,logger:o})}async function Fe({client:e,ctx:t,integration:n,req:i,logger:o}){if(!n.register)return;let{webhookUrl:r}=m(i);await n.register({client:e,ctx:t,webhookUrl:r,logger:o})}async function We({client:e,ctx:t,integration:n,req:i,logger:o}){if(!n.unregister)return;let{webhookUrl:r}=m(i);await n.unregister({ctx:t,webhookUrl:r,client:e,logger:o})}async function Ge({client:e,ctx:t,integration:n,req:i,logger:o}){if(!n.createUser)return;let{tags:r}=m(i);return await n.createUser({ctx:t,client:e,tags:r,logger:o})}async function Qe({client:e,ctx:t,integration:n,req:i,logger:o}){if(!n.createConversation)return;let{channel:r,tags:s}=m(i);return await n.createConversation({ctx:t,client:e,channel:r,tags:s,logger:o})}async function Xe({ctx:e,integration:t,req:n,client:i,logger:o}){let{conversation:r,user:s,type:c,payload:C,message:D}=m(n),T=t.channels[r.channel];if(!T)throw new Error(`Channel ${r.channel} not found`);let O=T.messages[c];if(!O)throw new Error(`Message of type ${c} not found in channel ${r.channel}`);await O({ctx:e,conversation:r,message:D,user:s,type:c,client:i,payload:C,ack:async({tags:q})=>{await i.updateMessage({id:D.id,tags:q})},logger:o})}async function Ye({req:e,integration:t,ctx:n,client:i,logger:o}){let{input:r,type:s}=m(e);if(!s)throw new Error("Missing action type");let c=t.actions[s];if(!c)throw new Error(`Action ${s} not found`);let C=await c({ctx:n,input:r,client:i,type:s,logger:o});return{body:JSON.stringify({output:C})}}var z=class{props;actions;channels;register;unregister;createUser;createConversation;handler;start;constructor(t){this.props=t,this.actions=t.actions,this.channels=t.channels,this.register=t.register,this.unregister=t.unregister,this.createUser=t.createUser,this.createConversation=t.createConversation,this.handler=ce(t),this.start=n=>h(this.handler,n)}};var K={};F(K,{defaults:()=>pt});var p=require("zod"),g=p.z.string().min(1),et=p.z.object({text:g}),tt=p.z.object({markdown:g}),nt=p.z.object({imageUrl:g}),ot=p.z.object({audioUrl:g}),rt=p.z.object({videoUrl:g}),it=p.z.object({fileUrl:g,title:g.optional()}),at=p.z.object({latitude:p.z.number(),longitude:p.z.number(),address:p.z.string().optional(),title:p.z.string().optional()}),de=p.z.object({title:g,subtitle:g.optional(),imageUrl:g.optional(),actions:p.z.array(p.z.object({action:p.z.enum(["postback","url","say"]),label:g,value:g}))}),ge=p.z.object({text:g,options:p.z.array(p.z.object({label:g,value:g}))}),st=p.z.object({items:p.z.array(de)}),pt={text:{schema:et},markdown:{schema:tt},image:{schema:nt},audio:{schema:ot},video:{schema:rt},file:{schema:it},location:{schema:at},carousel:{schema:st},card:{schema:de},dropdown:{schema:ge},choice:{schema:ge}};var ct={IntegrationClient:k,BotClient:H};0&&(module.exports={Bot,Integration,IntegrationDefinition,botIdHeader,botUserIdHeader,clients,configurationHeader,integrationIdHeader,messages,operationHeader,serve,typeHeader,webhookIdHeader});
//# sourceMappingURL=index.js.map
